Vagrant.configure("2") do |config|
  config.vm.box = "archlinux/archlinux"
  
  config.vm.define "dboireS" do |controller|
    controller.vm.hostname = "dboireS"
    controller.vm.provider "virtualbox" do |v|
      v.memory = 512
      v.cpus = 1
      v.name = "dboireS"
    end
    controller.vm.network "private_network", ip: "192.168.56.110", interface: "eth1"
    controller.vm.provision "shell", inline: <<-SHELL
      if [ ! -f /usr/local/bin/k3s ]; then
        echo "Installing k3s as controller"
        curl -sSL https://get.k3s.io | sh -s - server --write-kubeconfig-mode 644 --node-ip 192.168.56.110 --node-name dboireS
        echo "K3s controller installed successfully."
      else
        echo "K3s controller already installed."
      fi
      echo CURRENT_IP = $(ip a show eth1 | grep "inet " | awk '{print $2}' | cut -d/ -f1)
      cp /var/lib/rancher/k3s/server/token /vagrant/k3s_token
      #kubectl get nodes
    SHELL
  end

  config.vm.define "hbelleSW" do |worker|
    worker.vm.hostname = "hbelleSW"
    worker.vm.provider "virtualbox" do |v|
      v.memory = 512
      v.cpus = 1
      v.name = "hbelleSW"
    end
    worker.vm.network "private_network", ip: "192.168.56.111", interface: "eth1"
    worker.vm.provision "shell", inline: <<-SHELL
    echo "Installing k3s as agent"
    while [ ! -f /vagrant/k3s_token ]; do sleep 1; done
    K3S_TOKEN=$(cat /vagrant/k3s_token)
    while true; do
      curl -sfL https://get.k3s.io | K3S_URL=https://192.168.56.110:6443 K3S_TOKEN=$K3S_TOKEN sh -s - agent --node-ip 192.168.56.111 --node-name hbelleSW
      if [ $? -eq 0 ]; then
        echo "Successfully joined the cluster."
        break
      else
        echo "Failed to join the cluster. Retrying in 2 seconds..."
        sleep 2
      fi
    done
    
    echo CURRENT_IP = $(ip a show eth1 | grep "inet " | awk '{print $2}' | cut -d/ -f1)
  SHELL
  
  end
end
